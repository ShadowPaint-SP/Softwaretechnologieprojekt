@startuml
skinparam classAttributeIconSize 0
skinparam linetype ortho

'hide circle
hide empty fields
hide empty methods
'https://plantuml.com/sequence-diagram
package campingplatz.plots {
class Plot extends DetailedProduct {
-size: Double
-parking: ParkingLot
--
+Plot(name: String, size: Double, price: Money, parking: ParkingLot)
+getPriceString(): String
+getParking(): ParkingLot
+getSize(): Double
+getSizeString(): String

}

enum ParkingLot<<enumeration>>{
NONE
BIKE_PARKING
CAR_PARKING
CAMPER_PARKING
--
+size: Integer
+label: String
--
+ParkingLot(size: Integer, label: String)
}
class PlotCatalogController{
+PlotCatalogController(plotCatalog: PlotCatalog, reservationRepository: ReservationRepository)
+setupCatalog(model: Model, query: PlotCatalog.SiteState): String
+filter(model: Model, query: PlotCatalog.SiteState): String
+nextWeek(model:Model, query: PlotCatalog.SiteState): String
+prevWeek(model:Model, query: PlotCatalog.SiteState): String
+detail(plot:Plot, model:Model): String
}
interface PlotCatalog{
+filter(query: SiteState): List<Plot>
}
interface SiteState {
+getArrival(): LocalDate
+getDepature(): LocalDate


}
}
package campingplatz.utils {
class Utils
}
package salespoint {
interface Catalog <T extends Product>
}


Plot --> "1" ParkingLot : -parking
ParkingLot --+ Plot
PlotCatalogController --> "1" PlotCatalog : +plotCatalog
PlotCatalog ..> SiteState : <<use>>
SiteState --+ PlotCatalog
PlotCatalogController ..> Utils : <<use>>
PlotCatalog ..> Catalog : <<bind>>



PlotCatalogController ..> Plot : <<use>>

@enduml